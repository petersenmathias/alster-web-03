// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface AccordionStoryblok {
  title: string;
  blocks?: ColumnStoryblok[];
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface CardStoryblok {
  title: string;
  label?: string;
  media: AssetStoryblok;
  link?: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  component: "card";
  _uid: string;
  [k: string]: any;
}

export interface ColumnStoryblok {
  cols?: string;
  justify?: "start" | "center" | "end";
  align?: "start" | "center" | "end";
  sticky?: boolean;
  block: (
    | AccordionStoryblok
    | CardStoryblok
    | ColumnStoryblok
    | LogosStoryblok
    | MediaStoryblok
    | TextStoryblok
    | TitleStoryblok
  )[];
  component: "column";
  _uid: string;
  [k: string]: any;
}

export interface ConfigStoryblok {
  navigation: NavigationLinkStoryblok[];
  footer?: ColumnStoryblok[];
  component: "config";
  _uid: string;
  [k: string]: any;
}

export interface HeroStoryblok {
  title: string;
  body?: string;
  asset?: AssetStoryblok;
  component: "hero";
  _uid: string;
  [k: string]: any;
}

export interface InfoItemStoryblok {
  title: string;
  content: string;
  component: "info_item";
  _uid: string;
  [k: string]: any;
}

export interface LogosStoryblok {
  items?: MediaStoryblok[];
  component: "logos";
  _uid: string;
  [k: string]: any;
}

export interface MediaStoryblok {
  asset: AssetStoryblok;
  component: "media";
  _uid: string;
  [k: string]: any;
}

export interface NavigationLinkStoryblok {
  title: string;
  Link: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  component: "navigation_link";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  hero?: HeroStoryblok[];
  content?: SectionStoryblok[];
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SectionStoryblok {
  title?: string;
  border?: boolean;
  columns?: ColumnStoryblok[];
  gap?: "" | "sm" | "md" | "lg";
  component: "section";
  _uid: string;
  [k: string]: any;
}

export interface TextStoryblok {
  body: string;
  size?: "xs" | "sm" | "md" | "lg" | "xl" | "2xl" | "3xl";
  component: "text";
  _uid: string;
  [k: string]: any;
}

export interface TitleStoryblok {
  text: string;
  responsive?: boolean;
  component: "title";
  _uid: string;
  [k: string]: any;
}
